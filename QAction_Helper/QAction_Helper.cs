// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	public class Write
	{
		/// <summary>PID: 10 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int testbutton_10 = 10;
		/// <summary>PID: 10 | Type: write</summary>
		public const int testbutton = 10;
	}
}
public class WriteParameters
{
	/// <summary>PID: 10  | Type: write | DISCREETS: Test = 1</summary>
	public System.Object Testbutton {get { return Protocol.GetParameter(10); }set { Protocol.SetParameter(10, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	object Afterstartup_dummy { get; set; }
	object Testbutton_10 { get; set; }
	object Testbutton { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 10  | Type: write | DISCREETS: Test = 1</summary>
	public System.Object Testbutton_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: write | DISCREETS: Test = 1</summary>
	public System.Object Testbutton {get { return Write.Testbutton; }set { Write.Testbutton = value; }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		Write = new WriteParameters(this);
	}
}
}
